/* eslint-disable react/no-unescaped-entities */
/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable @typescript-eslint/no-floating-promises */
/* eslint-disable @typescript-eslint/no-non-null-assertion */
/* eslint-disable @typescript-eslint/no-unsafe-call */
import { type NextPage } from "next";
import { signIn, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import CardViewer from "../../components/CardViewer";
import Header from "../../components/Header";
import Spinner from "../../components/Spinner";
import { api } from "../../utils/api";

const ViewCard: NextPage = () => {
  //Check session and redirect if logged out
  const { status, data: sessionData } = useSession();
  status === "unauthenticated" && signIn();

  //Set up useQuery hook
  const { data: cards, refetch } = api.card.get.useQuery(
    { id: sessionData?.user?.id || "" },
    { enabled: false }
  );

  const [i, setI] = useState(0);

  const randomizeIndex = (): void => {
    if (cards !== undefined) {
      setI(Math.floor(Math.random() * cards.length));
    }
  };

  //Once sessionData is loaded fetch the data from the query
  //And set the array of cards
  useEffect(() => {
    if (sessionData !== null) {
      (async () => {
        await refetch();
      })();
    }
  }, [sessionData]);

  return (
    <>
      <Head>
        <title>View Card</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css"
          integrity="sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w=="
          crossOrigin="anonymous"
          referrerPolicy="no-referrer"
        />
      </Head>
      <main className="relative flex min-h-screen flex-col items-center justify-center bg-gradient-to-br from-cyan-600 to-sky-600">
        {status === "authenticated" && <Header sessionDetails={sessionData} />}
        {(status === "loading" || cards === undefined) && <Spinner />}
        {cards !== undefined && cards.length !== 0 && (
          <CardViewer
            shuffle={randomizeIndex}
            forward={() => {
              if (i === cards.length - 1) {
                setI(0);
                return;
              }
              setI(i + 1);
            }}
            backward={() => {
              if (i === 0) {
                setI(cards.length - 1);
                return;
              }
              setI(i - 1);
            }}
            card={cards[i]!}
            length={cards.length}
            i={i}
          />
        )}
        {(cards !== undefined && cards.length) === 0 && (
          <div className="mb-16 flex flex-col">
            <h1 className="text-center text-4xl font-bold text-white md:text-5xl">
              No cards to display ðŸ‘Ž
            </h1>
            <h2 className="text-start text-lg font-thin text-white sm:text-xl md:text-3xl">
              It's okay though, add some{" "}
              <Link
                href="/card/create"
                className="italic text-blue-300 duration-300 hover:text-blue-100"
              >
                Here
              </Link>
            </h2>
          </div>
        )}
      </main>
    </>
  );
};

export default ViewCard;
