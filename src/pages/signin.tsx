/* eslint-disable @typescript-eslint/no-misused-promises */
/* eslint-disable @typescript-eslint/no-floating-promises */
import { NextPage } from "next";
import { BuiltInProviderType } from "next-auth/providers";
import {
  ClientSafeProvider,
  getProviders,
  LiteralUnion,
  signIn,
  useSession,
} from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Spinner from "../components/Spinner";

const SignIn: NextPage = () => {
  const { status } = useSession();
  const router = useRouter();

  //Sends user to home if authenticated
  status === "authenticated" && router.push("/");

  const [providers, setProviders] = useState<Record<
    LiteralUnion<BuiltInProviderType, string>,
    ClientSafeProvider
  > | null>(null);
  useEffect(() => {
    (async () => {
      const res = await getProviders();
      setProviders(res);
    })();
  }, []);
  return (
    <>
      <Head>
        <title>Sign In</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css"
          integrity="sha512-MV7K8+y+gLIBoVD59lQIYicR65iaqukzvf/nwasF0nqhPay5w/9lJmVM2hMDcnK1OnMGCdVK+iQrJ7lzPJQd1w=="
          crossOrigin="anonymous"
          referrerPolicy="no-referrer"
        />
      </Head>
      <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-cyan-600 to-sky-600">
        {!providers && <Spinner />}
        {!!providers && (
          <div className="flex flex-col items-center justify-center gap-4">
            <h1 className="select-none text-4xl font-thin text-white">
              Sign In
            </h1>
            <hr className="w-8 bg-white opacity-25" />
            <button
              className="rounded-full bg-white py-2 px-4 text-cyan-600 transition-colors hover:text-cyan-800"
              onClick={() => signIn(providers.discord.id)}
            >
              <i className="fa-brands fa-discord fa-xl" /> Discord
            </button>
          </div>
        )}
      </div>
    </>
  );
};

export default SignIn;
